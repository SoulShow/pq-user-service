<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pq.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.pq.user.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="cert_type" property="certType" jdbcType="CHAR" />
    <result column="cert_no" property="certNo" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="huanxin_id" property="huanxinId" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="request_from" property="requestFrom" jdbcType="INTEGER" />
    <result column="lock_time" property="lockTime" jdbcType="TIMESTAMP" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="integral" property="integral" jdbcType="DECIMAL" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="review_time" property="reviewTime" jdbcType="TIMESTAMP" />
    <result column="review_status" property="reviewStatus" jdbcType="INTEGER" />

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pq_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pq.user.entity.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pq_user (user_id, username,
      nickname, password, name, 
      gender, avatar, cert_type, 
      cert_no, phone,role,
      birthday, status, request_from, 
      lock_time, register_time, created_time, 
      updated_time, integral, level,address,huanxin_id,
    review_time,review_status
      )
    values (#{userId,jdbcType=CHAR}, #{username,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{certType,jdbcType=CHAR}, 
      #{certNo,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},#{role},
      #{birthday,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{requestFrom,jdbcType=INTEGER}, 
      #{lockTime,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{integral,jdbcType=DECIMAL}, #{level,jdbcType=INTEGER},#{address},#{huanxinId},
    #{reviewTime},#{reviewStatus}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.pq.user.entity.User" >
    update pq_user
    set user_id = #{userId,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      role = #{role},
      address = #{address},
      cert_type = #{certType,jdbcType=CHAR},
      cert_no = #{certNo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      request_from = #{requestFrom,jdbcType=INTEGER},
      lock_time = #{lockTime,jdbcType=TIMESTAMP},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      integral = #{integral,jdbcType=DECIMAL},
      level = #{level,jdbcType=INTEGER},
      huanxin_id = #{huanxinId},
      review_time  = #{reviewTime},
      review_status = #{reviewStatus}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, user_id, username, nickname, password, name, gender, avatar,
    cert_type, cert_no, phone, birthday, status, request_from, lock_time,
    register_time, created_time, updated_time, integral, level,role,address,huanxin_id,
    review_time,review_status
    from pq_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_id, username, nickname, password, name, gender, avatar,
    cert_type, cert_no, phone, birthday, status, request_from, lock_time,
    register_time, created_time, updated_time, integral, level,role,address,huanxin_id,
    review_time,review_status
    from pq_user
  </select>
  <select id="selectByPhoneAndRole" resultMap="BaseResultMap" >
    select id, user_id, username, nickname, password, name, gender, avatar,
    cert_type, cert_no, phone, birthday, status, request_from, lock_time,
    register_time, created_time, updated_time, integral, level,role,address,huanxin_id,
    review_time,review_status
    from pq_user
    WHERE (username = #{phone}
    OR phone = #{phone})
    and role = #{role}
    order by created_time desc
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" >
    select id, user_id, username, nickname, password, name, gender, avatar,
    cert_type, cert_no, phone, birthday, status, request_from, lock_time,
    register_time, created_time, updated_time, integral, level,role,address,huanxin_id,
    review_time,review_status
    from pq_user
    WHERE user_id = #{userId}
    and review_status !=2
  </select>
</mapper>